package projetofinal;

import java.util.Scanner;  
import java.util.ArrayList;  
  
public class Teste {  
  
//o sistema pode ter: controle de login e senha por usuário
//o sistema pode ter: exceptions.
//o sistema pode ter:  QUANTIDADE DE ANIMAIS CADASTRADOS POR USUÁRIO
  
    public static void main(String[] args) {  
    
Scanner entrada = new Scanner(System.in);  
  
        int i = 0; 
        int k = 0;
        int escolha = 0;  
        //variaveis utilizadas para representarem essas strings em determinadas partes do programa
        String sexogambiarra  = "Macho";
        String sexogambiarra2  = "Femea";
        String racagambiarra  = "Cachorro";
        String racagambiarra2  = "Gato";
  
        //ArrayList para interagir com os dados do usuário
        ArrayList<Registro> cadastro = new ArrayList<Registro>(); 
        
        //ArrayList para interagir com os dados do animal
        ArrayList<Animais> cadastroanimal = new ArrayList<Animais>();
        
       //Laço de repetição que representa a exibição do menu até que encontre o System.exit(0) na opção 6
        
        while (true) { 
  
        System.out.println("\nBem vindo ao meu pet vacinas!! \n");  
 	
 	      System.out.println("1 - Adicionar Novo Usuario ");  
        System.out.println("2 - Remover Usuario ");  
        System.out.println("3 - Mostra todos os Usuarios Cadastrados "); 
        System.out.println("4 - Adicionar Animal ");
        System.out.println("5 - Mostra todos os Animais Cadastrados "); 
        //System.out.println("6 - Visualizar histórico vacinal de um animal")
        System.out.println("7 - Sair\n\n");   

        System.out.print("Digite sua opcao: ");  
        escolha = entrada.nextInt();  
        entrada.nextLine(); // termina a leitura da linha acima  
  
  
            switch (escolha) {  
            case 1:  
                Registro reg = new Registro();  
                  
                reg.setId(i++);//a variável i vai ser utilizada aqui com o seu valor atual e logo após vai ser incrementado 1 no valor dela  
                System.out.print("Digite o seu nome: ");  
                reg.setNome(entrada.nextLine());  
                //System.out.println("\n\nVocê quer adicionar um novo animal agora? > \n1- Gato \n2- Cachorro");  
                //System.out.print("Digite o tipo de Animal: ");  
                //reg.setConta(entrada.nextInt());  
                //System.out.print("Digite a Idade: ");  
                //reg.setIdade(entrada.nextDouble());  
                cadastro.add(reg);                
 
                break;
 // Problema no Delete: quando se tem uma biblioteca de objetos arraylist numerável, e vc vai deletando
 //os objetos, o ID deles permanece, sendo que o "remove" está trabalhando com o índice do arraylist,
 // não com "ID" do qual ele pede no print.
            case 2:  
               
                System.out.println("Informe o ID do usuário a ser excluído:\n");
                Scanner remover = new Scanner(System.in);
                 int j = remover.nextInt();
                         
                 try{
                     cadastro.remove(j);
                 }
                 
                 catch (IndexOutOfBoundsException e) {
                        
                        System.out.printf("\nErro: posicao invalida (%s).",
                        e.getMessage());

                 }
                break;   
        
            case 3:  
  
                if (cadastro.isEmpty()) {  
                    System.out.println("\nNenhum Usuário cadastrado\n");  
                } else {  
  
                    for (int m = 0; m < cadastro.size(); m++) {  
                        System.out.println("\nID Usuário: "+ cadastro.get(m).getId());  
                        System.out.println("Nome: " + cadastro.get(m).getNome());  
                          
                    }  
                }  
  
                break;  
            case 4:
                Animais reganimal = new Animais();
              reganimal.AdicionarAnimal();
               reganimal.setId(k++);
                cadastroanimal.add(reganimal); 
                break;
                
            case 5:
                if (cadastro.isEmpty()) {  
                    System.out.println("\nNenhum Animal cadastrado\n");  
                } else {  
  
                    for (int m = 0; m < cadastroanimal.size(); m++) {  
                        System.out.println("\nID Animal: "+ cadastroanimal.get(m).getId());  
                        System.out.println("Nome: " + cadastroanimal.get(m).getNome());
                        System.out.println("Idade (meses) : " + cadastroanimal.get(m).getIdade());
                        if(cadastroanimal.get(m).getSexo() == 1)  
                            System.out.println("Sexo: " + sexogambiarra);
                        if(cadastroanimal.get(m).getSexo() == 2) 
                            System.out.println("Sexo: " + sexogambiarra2);
                        if(cadastroanimal.get(m).getRaca() == 1) 
                            System.out.println("Esse Animal é um: " + racagambiarra);
                        if(cadastroanimal.get(m).getRaca() == 2) 
                            System.out.println("Esse Animal é um: " + racagambiarra2);
                      
                          
                    }  
                }  
  
  
            case 6:
                     Scanner lerNome = new Scanner(System.in);
                      Scanner decisao = new Scanner(System.in);
              
                      System.out.print("Digite o animal que você deseja visualizar histórico: ");  
                      
                      
                      boolean nomePesquisado = cadastroanimal.contains(10); 
	  
                        if (nomePesquisado == true) {
                        
                           System.out.println("Seu animal está cadastrado.");
                           ArrayList vacinas = new ArrayList();  
  
                             while(!vacinas.isEmpty()){  
                                      System.out.println(vacinas.remove(0));  
                            }  
                      }
                  
                      else {
                         System.out.println("Seu animal não está cadastrado. Deseja cadastrar agora? (1) Sim ou (2) Não");
                         int resposta = decisao.nextInt();
                         
                         if(resposta == 1) {
                                      
                   //CHAMA O CASE 1 DE ADD ANIMAL -> vai dar problema porque ele faz as mesmas perguntas de add usuário nesse case
                         }
                         
                         else if(resposta == 2){
                         
                         //VOLTA PRO MENU PRINCIPAL
                         }
                      }
                
            case 7:  
                System.exit(0);  
                break;  
                  
            default:  
                System.out.println("Opcao Incorreta");  
            }  
        }  
    }  
}  
